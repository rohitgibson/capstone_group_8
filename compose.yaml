# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

version: '3'
name: group_8_capstone
services:
  server:
    container_name: "group_8_avs_api"
    image: ghcr.io/rohitgibson/capstone_group_8:main
    build: 
      context: .
    ports:
      - 8000:8000
    networks:
      - avs_network

  redis:
    image: "redis/redis-stack:latest"
    container_name: redis
    expose:
      - 6379:6379
      - 8001:8001
    volumes:
      - "./local-data/:/data"
    environment:
      - "REDIS_ARGS=--enable-debug-command yes --enable-module-command yes"
    networks:
      - avs_network

  grafana:
    container_name: grafana-dashboards
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    networks:
      - avs_network

  loki:
    container_name: loki
    image: grafana/loki:2.9.2
    expose:
      - "3100:3100"
      - "7946"
      - "9095"
    networks:
      - avs_network
      
  promtail:
    container_name: promtail
    image: grafana/promtail:2.0.0
    
  

networks:
  avs_network:
    driver: bridge
    name: avs_network